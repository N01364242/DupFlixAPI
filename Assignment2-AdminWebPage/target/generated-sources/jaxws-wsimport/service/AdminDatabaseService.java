
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminDatabaseService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminDatabaseService {


    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "upload", targetNamespace = "http://service/", className = "service.Upload")
    @ResponseWrapper(localName = "uploadResponse", targetNamespace = "http://service/", className = "service.UploadResponse")
    @Action(input = "http://service/AdminDatabaseService/uploadRequest", output = "http://service/AdminDatabaseService/uploadResponse")
    public int upload(
        @WebParam(name = "arg0", targetNamespace = "")
        Dupflix arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDupFlixData", targetNamespace = "http://service/", className = "service.DeleteDupFlixData")
    @ResponseWrapper(localName = "deleteDupFlixDataResponse", targetNamespace = "http://service/", className = "service.DeleteDupFlixDataResponse")
    @Action(input = "http://service/AdminDatabaseService/deleteDupFlixDataRequest", output = "http://service/AdminDatabaseService/deleteDupFlixDataResponse")
    public int deleteDupFlixData(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.Dupflix>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDupFlixData", targetNamespace = "http://service/", className = "service.GetAllDupFlixData")
    @ResponseWrapper(localName = "getAllDupFlixDataResponse", targetNamespace = "http://service/", className = "service.GetAllDupFlixDataResponse")
    @Action(input = "http://service/AdminDatabaseService/getAllDupFlixDataRequest", output = "http://service/AdminDatabaseService/getAllDupFlixDataResponse")
    public List<Dupflix> getAllDupFlixData();

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editDupFlixData", targetNamespace = "http://service/", className = "service.EditDupFlixData")
    @ResponseWrapper(localName = "editDupFlixDataResponse", targetNamespace = "http://service/", className = "service.EditDupFlixDataResponse")
    @Action(input = "http://service/AdminDatabaseService/editDupFlixDataRequest", output = "http://service/AdminDatabaseService/editDupFlixDataResponse")
    public int editDupFlixData(
        @WebParam(name = "arg0", targetNamespace = "")
        Dupflix arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns service.Dupflix
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDupFlixData", targetNamespace = "http://service/", className = "service.GetDupFlixData")
    @ResponseWrapper(localName = "getDupFlixDataResponse", targetNamespace = "http://service/", className = "service.GetDupFlixDataResponse")
    @Action(input = "http://service/AdminDatabaseService/getDupFlixDataRequest", output = "http://service/AdminDatabaseService/getDupFlixDataResponse")
    public Dupflix getDupFlixData(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
